// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Subs.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Subs {

  /// <summary>Holder for reflection information generated from Subs.proto</summary>
  public static partial class SubsReflection {

    #region Descriptor
    /// <summary>File descriptor for Subs.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SubsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpTdWJzLnByb3RvEgRzdWJzIhgKFlN1YkluaXRpYWxDaGVja1JlcXVlc3Qi",
            "KAoXU3ViSW5pdGlhbENoZWNrUmVzcG9uc2USDQoFaXNTZXQYASABKAgivgEK",
            "DVN1YlNldFJlcXVlc3QSFwoPYW5jaG9yUG9zaXRpb25YGAEgASgCEhcKD2Fu",
            "Y2hvclBvc2l0aW9uWRgCIAEoAhIXCg9hbmNob3JQb3NpdGlvbloYAyABKAIS",
            "FwoPYW5jaG9yUm90YXRpb25XGAQgASgCEhcKD2FuY2hvclJvdGF0aW9uWBgF",
            "IAEoAhIXCg9hbmNob3JSb3RhdGlvblkYBiABKAISFwoPYW5jaG9yUm90YXRp",
            "b25aGAcgASgCIh8KDlN1YlNldFJlc3BvbnNlEg0KBWlzU2V0GAEgASgIIg8K",
            "DVN1YkdldFJlcXVlc3QivwEKDlN1YkdldFJlc3BvbnNlEhcKD2FuY2hvclBv",
            "c2l0aW9uWBgBIAEoAhIXCg9hbmNob3JQb3NpdGlvblkYAiABKAISFwoPYW5j",
            "aG9yUG9zaXRpb25aGAMgASgCEhcKD2FuY2hvclJvdGF0aW9uVxgEIAEoAhIX",
            "Cg9hbmNob3JSb3RhdGlvblgYBSABKAISFwoPYW5jaG9yUm90YXRpb25ZGAYg",
            "ASgCEhcKD2FuY2hvclJvdGF0aW9uWhgHIAEoAiIlChNTdWJNYW55VGltZXNS",
            "ZXF1ZXN0Eg4KBmlwQWRkchgBIAEoCSImChRTdWJNYW55VGltZXNSZXNwb25z",
            "ZRIOCgZyZXN1bHQYASABKAkykgIKC1N1YnNTZXJ2aWNlEkkKDFN1Yk1hbnlU",
            "aW1lcxIZLnN1YnMuU3ViTWFueVRpbWVzUmVxdWVzdBoaLnN1YnMuU3ViTWFu",
            "eVRpbWVzUmVzcG9uc2UiADABEk4KD1N1YkluaXRpYWxDaGVjaxIcLnN1YnMu",
            "U3ViSW5pdGlhbENoZWNrUmVxdWVzdBodLnN1YnMuU3ViSW5pdGlhbENoZWNr",
            "UmVzcG9uc2USMwoGU3ViR2V0EhMuc3Vicy5TdWJHZXRSZXF1ZXN0GhQuc3Vi",
            "cy5TdWJHZXRSZXNwb25zZRIzCgZTdWJTZXQSEy5zdWJzLlN1YlNldFJlcXVl",
            "c3QaFC5zdWJzLlN1YlNldFJlc3BvbnNlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Subs.SubInitialCheckRequest), global::Subs.SubInitialCheckRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Subs.SubInitialCheckResponse), global::Subs.SubInitialCheckResponse.Parser, new[]{ "IsSet" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Subs.SubSetRequest), global::Subs.SubSetRequest.Parser, new[]{ "AnchorPositionX", "AnchorPositionY", "AnchorPositionZ", "AnchorRotationW", "AnchorRotationX", "AnchorRotationY", "AnchorRotationZ" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Subs.SubSetResponse), global::Subs.SubSetResponse.Parser, new[]{ "IsSet" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Subs.SubGetRequest), global::Subs.SubGetRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Subs.SubGetResponse), global::Subs.SubGetResponse.Parser, new[]{ "AnchorPositionX", "AnchorPositionY", "AnchorPositionZ", "AnchorRotationW", "AnchorRotationX", "AnchorRotationY", "AnchorRotationZ" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Subs.SubManyTimesRequest), global::Subs.SubManyTimesRequest.Parser, new[]{ "IpAddr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Subs.SubManyTimesResponse), global::Subs.SubManyTimesResponse.Parser, new[]{ "Result" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SubInitialCheckRequest : pb::IMessage<SubInitialCheckRequest> {
    private static readonly pb::MessageParser<SubInitialCheckRequest> _parser = new pb::MessageParser<SubInitialCheckRequest>(() => new SubInitialCheckRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubInitialCheckRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Subs.SubsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubInitialCheckRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubInitialCheckRequest(SubInitialCheckRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubInitialCheckRequest Clone() {
      return new SubInitialCheckRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubInitialCheckRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubInitialCheckRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubInitialCheckRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SubInitialCheckResponse : pb::IMessage<SubInitialCheckResponse> {
    private static readonly pb::MessageParser<SubInitialCheckResponse> _parser = new pb::MessageParser<SubInitialCheckResponse>(() => new SubInitialCheckResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubInitialCheckResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Subs.SubsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubInitialCheckResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubInitialCheckResponse(SubInitialCheckResponse other) : this() {
      isSet_ = other.isSet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubInitialCheckResponse Clone() {
      return new SubInitialCheckResponse(this);
    }

    /// <summary>Field number for the "isSet" field.</summary>
    public const int IsSetFieldNumber = 1;
    private bool isSet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSet {
      get { return isSet_; }
      set {
        isSet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubInitialCheckResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubInitialCheckResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSet != other.IsSet) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSet != false) hash ^= IsSet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSet != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsSet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSet != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubInitialCheckResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsSet != false) {
        IsSet = other.IsSet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsSet = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubSetRequest : pb::IMessage<SubSetRequest> {
    private static readonly pb::MessageParser<SubSetRequest> _parser = new pb::MessageParser<SubSetRequest>(() => new SubSetRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubSetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Subs.SubsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubSetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubSetRequest(SubSetRequest other) : this() {
      anchorPositionX_ = other.anchorPositionX_;
      anchorPositionY_ = other.anchorPositionY_;
      anchorPositionZ_ = other.anchorPositionZ_;
      anchorRotationW_ = other.anchorRotationW_;
      anchorRotationX_ = other.anchorRotationX_;
      anchorRotationY_ = other.anchorRotationY_;
      anchorRotationZ_ = other.anchorRotationZ_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubSetRequest Clone() {
      return new SubSetRequest(this);
    }

    /// <summary>Field number for the "anchorPositionX" field.</summary>
    public const int AnchorPositionXFieldNumber = 1;
    private float anchorPositionX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AnchorPositionX {
      get { return anchorPositionX_; }
      set {
        anchorPositionX_ = value;
      }
    }

    /// <summary>Field number for the "anchorPositionY" field.</summary>
    public const int AnchorPositionYFieldNumber = 2;
    private float anchorPositionY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AnchorPositionY {
      get { return anchorPositionY_; }
      set {
        anchorPositionY_ = value;
      }
    }

    /// <summary>Field number for the "anchorPositionZ" field.</summary>
    public const int AnchorPositionZFieldNumber = 3;
    private float anchorPositionZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AnchorPositionZ {
      get { return anchorPositionZ_; }
      set {
        anchorPositionZ_ = value;
      }
    }

    /// <summary>Field number for the "anchorRotationW" field.</summary>
    public const int AnchorRotationWFieldNumber = 4;
    private float anchorRotationW_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AnchorRotationW {
      get { return anchorRotationW_; }
      set {
        anchorRotationW_ = value;
      }
    }

    /// <summary>Field number for the "anchorRotationX" field.</summary>
    public const int AnchorRotationXFieldNumber = 5;
    private float anchorRotationX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AnchorRotationX {
      get { return anchorRotationX_; }
      set {
        anchorRotationX_ = value;
      }
    }

    /// <summary>Field number for the "anchorRotationY" field.</summary>
    public const int AnchorRotationYFieldNumber = 6;
    private float anchorRotationY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AnchorRotationY {
      get { return anchorRotationY_; }
      set {
        anchorRotationY_ = value;
      }
    }

    /// <summary>Field number for the "anchorRotationZ" field.</summary>
    public const int AnchorRotationZFieldNumber = 7;
    private float anchorRotationZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AnchorRotationZ {
      get { return anchorRotationZ_; }
      set {
        anchorRotationZ_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubSetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubSetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AnchorPositionX, other.AnchorPositionX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AnchorPositionY, other.AnchorPositionY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AnchorPositionZ, other.AnchorPositionZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AnchorRotationW, other.AnchorRotationW)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AnchorRotationX, other.AnchorRotationX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AnchorRotationY, other.AnchorRotationY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AnchorRotationZ, other.AnchorRotationZ)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AnchorPositionX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AnchorPositionX);
      if (AnchorPositionY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AnchorPositionY);
      if (AnchorPositionZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AnchorPositionZ);
      if (AnchorRotationW != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AnchorRotationW);
      if (AnchorRotationX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AnchorRotationX);
      if (AnchorRotationY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AnchorRotationY);
      if (AnchorRotationZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AnchorRotationZ);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AnchorPositionX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(AnchorPositionX);
      }
      if (AnchorPositionY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(AnchorPositionY);
      }
      if (AnchorPositionZ != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(AnchorPositionZ);
      }
      if (AnchorRotationW != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(AnchorRotationW);
      }
      if (AnchorRotationX != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(AnchorRotationX);
      }
      if (AnchorRotationY != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(AnchorRotationY);
      }
      if (AnchorRotationZ != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(AnchorRotationZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AnchorPositionX != 0F) {
        size += 1 + 4;
      }
      if (AnchorPositionY != 0F) {
        size += 1 + 4;
      }
      if (AnchorPositionZ != 0F) {
        size += 1 + 4;
      }
      if (AnchorRotationW != 0F) {
        size += 1 + 4;
      }
      if (AnchorRotationX != 0F) {
        size += 1 + 4;
      }
      if (AnchorRotationY != 0F) {
        size += 1 + 4;
      }
      if (AnchorRotationZ != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubSetRequest other) {
      if (other == null) {
        return;
      }
      if (other.AnchorPositionX != 0F) {
        AnchorPositionX = other.AnchorPositionX;
      }
      if (other.AnchorPositionY != 0F) {
        AnchorPositionY = other.AnchorPositionY;
      }
      if (other.AnchorPositionZ != 0F) {
        AnchorPositionZ = other.AnchorPositionZ;
      }
      if (other.AnchorRotationW != 0F) {
        AnchorRotationW = other.AnchorRotationW;
      }
      if (other.AnchorRotationX != 0F) {
        AnchorRotationX = other.AnchorRotationX;
      }
      if (other.AnchorRotationY != 0F) {
        AnchorRotationY = other.AnchorRotationY;
      }
      if (other.AnchorRotationZ != 0F) {
        AnchorRotationZ = other.AnchorRotationZ;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            AnchorPositionX = input.ReadFloat();
            break;
          }
          case 21: {
            AnchorPositionY = input.ReadFloat();
            break;
          }
          case 29: {
            AnchorPositionZ = input.ReadFloat();
            break;
          }
          case 37: {
            AnchorRotationW = input.ReadFloat();
            break;
          }
          case 45: {
            AnchorRotationX = input.ReadFloat();
            break;
          }
          case 53: {
            AnchorRotationY = input.ReadFloat();
            break;
          }
          case 61: {
            AnchorRotationZ = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubSetResponse : pb::IMessage<SubSetResponse> {
    private static readonly pb::MessageParser<SubSetResponse> _parser = new pb::MessageParser<SubSetResponse>(() => new SubSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Subs.SubsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubSetResponse(SubSetResponse other) : this() {
      isSet_ = other.isSet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubSetResponse Clone() {
      return new SubSetResponse(this);
    }

    /// <summary>Field number for the "isSet" field.</summary>
    public const int IsSetFieldNumber = 1;
    private bool isSet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSet {
      get { return isSet_; }
      set {
        isSet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSet != other.IsSet) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSet != false) hash ^= IsSet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSet != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsSet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSet != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsSet != false) {
        IsSet = other.IsSet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsSet = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubGetRequest : pb::IMessage<SubGetRequest> {
    private static readonly pb::MessageParser<SubGetRequest> _parser = new pb::MessageParser<SubGetRequest>(() => new SubGetRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubGetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Subs.SubsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubGetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubGetRequest(SubGetRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubGetRequest Clone() {
      return new SubGetRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubGetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubGetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubGetRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SubGetResponse : pb::IMessage<SubGetResponse> {
    private static readonly pb::MessageParser<SubGetResponse> _parser = new pb::MessageParser<SubGetResponse>(() => new SubGetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubGetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Subs.SubsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubGetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubGetResponse(SubGetResponse other) : this() {
      anchorPositionX_ = other.anchorPositionX_;
      anchorPositionY_ = other.anchorPositionY_;
      anchorPositionZ_ = other.anchorPositionZ_;
      anchorRotationW_ = other.anchorRotationW_;
      anchorRotationX_ = other.anchorRotationX_;
      anchorRotationY_ = other.anchorRotationY_;
      anchorRotationZ_ = other.anchorRotationZ_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubGetResponse Clone() {
      return new SubGetResponse(this);
    }

    /// <summary>Field number for the "anchorPositionX" field.</summary>
    public const int AnchorPositionXFieldNumber = 1;
    private float anchorPositionX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AnchorPositionX {
      get { return anchorPositionX_; }
      set {
        anchorPositionX_ = value;
      }
    }

    /// <summary>Field number for the "anchorPositionY" field.</summary>
    public const int AnchorPositionYFieldNumber = 2;
    private float anchorPositionY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AnchorPositionY {
      get { return anchorPositionY_; }
      set {
        anchorPositionY_ = value;
      }
    }

    /// <summary>Field number for the "anchorPositionZ" field.</summary>
    public const int AnchorPositionZFieldNumber = 3;
    private float anchorPositionZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AnchorPositionZ {
      get { return anchorPositionZ_; }
      set {
        anchorPositionZ_ = value;
      }
    }

    /// <summary>Field number for the "anchorRotationW" field.</summary>
    public const int AnchorRotationWFieldNumber = 4;
    private float anchorRotationW_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AnchorRotationW {
      get { return anchorRotationW_; }
      set {
        anchorRotationW_ = value;
      }
    }

    /// <summary>Field number for the "anchorRotationX" field.</summary>
    public const int AnchorRotationXFieldNumber = 5;
    private float anchorRotationX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AnchorRotationX {
      get { return anchorRotationX_; }
      set {
        anchorRotationX_ = value;
      }
    }

    /// <summary>Field number for the "anchorRotationY" field.</summary>
    public const int AnchorRotationYFieldNumber = 6;
    private float anchorRotationY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AnchorRotationY {
      get { return anchorRotationY_; }
      set {
        anchorRotationY_ = value;
      }
    }

    /// <summary>Field number for the "anchorRotationZ" field.</summary>
    public const int AnchorRotationZFieldNumber = 7;
    private float anchorRotationZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AnchorRotationZ {
      get { return anchorRotationZ_; }
      set {
        anchorRotationZ_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubGetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubGetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AnchorPositionX, other.AnchorPositionX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AnchorPositionY, other.AnchorPositionY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AnchorPositionZ, other.AnchorPositionZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AnchorRotationW, other.AnchorRotationW)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AnchorRotationX, other.AnchorRotationX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AnchorRotationY, other.AnchorRotationY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AnchorRotationZ, other.AnchorRotationZ)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AnchorPositionX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AnchorPositionX);
      if (AnchorPositionY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AnchorPositionY);
      if (AnchorPositionZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AnchorPositionZ);
      if (AnchorRotationW != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AnchorRotationW);
      if (AnchorRotationX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AnchorRotationX);
      if (AnchorRotationY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AnchorRotationY);
      if (AnchorRotationZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AnchorRotationZ);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AnchorPositionX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(AnchorPositionX);
      }
      if (AnchorPositionY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(AnchorPositionY);
      }
      if (AnchorPositionZ != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(AnchorPositionZ);
      }
      if (AnchorRotationW != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(AnchorRotationW);
      }
      if (AnchorRotationX != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(AnchorRotationX);
      }
      if (AnchorRotationY != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(AnchorRotationY);
      }
      if (AnchorRotationZ != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(AnchorRotationZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AnchorPositionX != 0F) {
        size += 1 + 4;
      }
      if (AnchorPositionY != 0F) {
        size += 1 + 4;
      }
      if (AnchorPositionZ != 0F) {
        size += 1 + 4;
      }
      if (AnchorRotationW != 0F) {
        size += 1 + 4;
      }
      if (AnchorRotationX != 0F) {
        size += 1 + 4;
      }
      if (AnchorRotationY != 0F) {
        size += 1 + 4;
      }
      if (AnchorRotationZ != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubGetResponse other) {
      if (other == null) {
        return;
      }
      if (other.AnchorPositionX != 0F) {
        AnchorPositionX = other.AnchorPositionX;
      }
      if (other.AnchorPositionY != 0F) {
        AnchorPositionY = other.AnchorPositionY;
      }
      if (other.AnchorPositionZ != 0F) {
        AnchorPositionZ = other.AnchorPositionZ;
      }
      if (other.AnchorRotationW != 0F) {
        AnchorRotationW = other.AnchorRotationW;
      }
      if (other.AnchorRotationX != 0F) {
        AnchorRotationX = other.AnchorRotationX;
      }
      if (other.AnchorRotationY != 0F) {
        AnchorRotationY = other.AnchorRotationY;
      }
      if (other.AnchorRotationZ != 0F) {
        AnchorRotationZ = other.AnchorRotationZ;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            AnchorPositionX = input.ReadFloat();
            break;
          }
          case 21: {
            AnchorPositionY = input.ReadFloat();
            break;
          }
          case 29: {
            AnchorPositionZ = input.ReadFloat();
            break;
          }
          case 37: {
            AnchorRotationW = input.ReadFloat();
            break;
          }
          case 45: {
            AnchorRotationX = input.ReadFloat();
            break;
          }
          case 53: {
            AnchorRotationY = input.ReadFloat();
            break;
          }
          case 61: {
            AnchorRotationZ = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubManyTimesRequest : pb::IMessage<SubManyTimesRequest> {
    private static readonly pb::MessageParser<SubManyTimesRequest> _parser = new pb::MessageParser<SubManyTimesRequest>(() => new SubManyTimesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubManyTimesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Subs.SubsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubManyTimesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubManyTimesRequest(SubManyTimesRequest other) : this() {
      ipAddr_ = other.ipAddr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubManyTimesRequest Clone() {
      return new SubManyTimesRequest(this);
    }

    /// <summary>Field number for the "ipAddr" field.</summary>
    public const int IpAddrFieldNumber = 1;
    private string ipAddr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IpAddr {
      get { return ipAddr_; }
      set {
        ipAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubManyTimesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubManyTimesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IpAddr != other.IpAddr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IpAddr.Length != 0) hash ^= IpAddr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IpAddr.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IpAddr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IpAddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IpAddr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubManyTimesRequest other) {
      if (other == null) {
        return;
      }
      if (other.IpAddr.Length != 0) {
        IpAddr = other.IpAddr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IpAddr = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubManyTimesResponse : pb::IMessage<SubManyTimesResponse> {
    private static readonly pb::MessageParser<SubManyTimesResponse> _parser = new pb::MessageParser<SubManyTimesResponse>(() => new SubManyTimesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubManyTimesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Subs.SubsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubManyTimesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubManyTimesResponse(SubManyTimesResponse other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubManyTimesResponse Clone() {
      return new SubManyTimesResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubManyTimesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubManyTimesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubManyTimesResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
