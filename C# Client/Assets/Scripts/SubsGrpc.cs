// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Subs.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Subs {
  public static partial class SubsService
  {
    static readonly string __ServiceName = "subs.SubsService";

    static readonly grpc::Marshaller<global::Subs.SubManyTimesRequest> __Marshaller_subs_SubManyTimesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Subs.SubManyTimesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Subs.SubManyTimesResponse> __Marshaller_subs_SubManyTimesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Subs.SubManyTimesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Subs.SubInitialCheckRequest> __Marshaller_subs_SubInitialCheckRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Subs.SubInitialCheckRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Subs.SubInitialCheckResponse> __Marshaller_subs_SubInitialCheckResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Subs.SubInitialCheckResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Subs.SubGetRequest> __Marshaller_subs_SubGetRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Subs.SubGetRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Subs.SubGetResponse> __Marshaller_subs_SubGetResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Subs.SubGetResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Subs.SubSetRequest> __Marshaller_subs_SubSetRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Subs.SubSetRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Subs.SubSetResponse> __Marshaller_subs_SubSetResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Subs.SubSetResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Subs.SubManyTimesRequest, global::Subs.SubManyTimesResponse> __Method_SubManyTimes = new grpc::Method<global::Subs.SubManyTimesRequest, global::Subs.SubManyTimesResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "SubManyTimes",
        __Marshaller_subs_SubManyTimesRequest,
        __Marshaller_subs_SubManyTimesResponse);

    static readonly grpc::Method<global::Subs.SubInitialCheckRequest, global::Subs.SubInitialCheckResponse> __Method_SubInitialCheck = new grpc::Method<global::Subs.SubInitialCheckRequest, global::Subs.SubInitialCheckResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SubInitialCheck",
        __Marshaller_subs_SubInitialCheckRequest,
        __Marshaller_subs_SubInitialCheckResponse);

    static readonly grpc::Method<global::Subs.SubGetRequest, global::Subs.SubGetResponse> __Method_SubGet = new grpc::Method<global::Subs.SubGetRequest, global::Subs.SubGetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SubGet",
        __Marshaller_subs_SubGetRequest,
        __Marshaller_subs_SubGetResponse);

    static readonly grpc::Method<global::Subs.SubSetRequest, global::Subs.SubSetResponse> __Method_SubSet = new grpc::Method<global::Subs.SubSetRequest, global::Subs.SubSetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SubSet",
        __Marshaller_subs_SubSetRequest,
        __Marshaller_subs_SubSetResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Subs.SubsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SubsService</summary>
    public abstract partial class SubsServiceBase
    {
      public virtual global::System.Threading.Tasks.Task SubManyTimes(global::Subs.SubManyTimesRequest request, grpc::IServerStreamWriter<global::Subs.SubManyTimesResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Subs.SubInitialCheckResponse> SubInitialCheck(global::Subs.SubInitialCheckRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Subs.SubGetResponse> SubGet(global::Subs.SubGetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Subs.SubSetResponse> SubSet(global::Subs.SubSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SubsService</summary>
    public partial class SubsServiceClient : grpc::ClientBase<SubsServiceClient>
    {
      /// <summary>Creates a new client for SubsService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public SubsServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SubsService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public SubsServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected SubsServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected SubsServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual grpc::AsyncServerStreamingCall<global::Subs.SubManyTimesResponse> SubManyTimes(global::Subs.SubManyTimesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubManyTimes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Subs.SubManyTimesResponse> SubManyTimes(global::Subs.SubManyTimesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_SubManyTimes, null, options, request);
      }
      public virtual global::Subs.SubInitialCheckResponse SubInitialCheck(global::Subs.SubInitialCheckRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubInitialCheck(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Subs.SubInitialCheckResponse SubInitialCheck(global::Subs.SubInitialCheckRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SubInitialCheck, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Subs.SubInitialCheckResponse> SubInitialCheckAsync(global::Subs.SubInitialCheckRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubInitialCheckAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Subs.SubInitialCheckResponse> SubInitialCheckAsync(global::Subs.SubInitialCheckRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SubInitialCheck, null, options, request);
      }
      public virtual global::Subs.SubGetResponse SubGet(global::Subs.SubGetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubGet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Subs.SubGetResponse SubGet(global::Subs.SubGetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SubGet, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Subs.SubGetResponse> SubGetAsync(global::Subs.SubGetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubGetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Subs.SubGetResponse> SubGetAsync(global::Subs.SubGetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SubGet, null, options, request);
      }
      public virtual global::Subs.SubSetResponse SubSet(global::Subs.SubSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Subs.SubSetResponse SubSet(global::Subs.SubSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SubSet, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Subs.SubSetResponse> SubSetAsync(global::Subs.SubSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SubSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Subs.SubSetResponse> SubSetAsync(global::Subs.SubSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SubSet, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override SubsServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SubsServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(SubsServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SubManyTimes, serviceImpl.SubManyTimes)
          .AddMethod(__Method_SubInitialCheck, serviceImpl.SubInitialCheck)
          .AddMethod(__Method_SubGet, serviceImpl.SubGet)
          .AddMethod(__Method_SubSet, serviceImpl.SubSet).Build();
    }

    /// <summary>Register service method implementations with a service binder. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SubsServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SubManyTimes, serviceImpl.SubManyTimes);
      serviceBinder.AddMethod(__Method_SubInitialCheck, serviceImpl.SubInitialCheck);
      serviceBinder.AddMethod(__Method_SubGet, serviceImpl.SubGet);
      serviceBinder.AddMethod(__Method_SubSet, serviceImpl.SubSet);
    }

  }
}
#endregion
